#ifndef __ITOA_H__
#define __ITOA_H__ 1

#include "sections_bsp.h"

#include "base_types.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Подпрограмма преобразования целого 32-х битового числа
 * в строку
 *  (in)  value     - преобразуемое число
 *  (in)  str       - указатель результирующую строку
 *  (in)  str_len   - максимальный размер строки (символов),
 *                    включая символ конца строки
 *  (in)  base      - основание системы счисления
 *  (out) ptr_len   - указатель на число символов в результирующей строке
 *                    NULL - не возвращать число символов
 * Результат:
 *  NO_ERROR        - Успешное выполнение
 *  INVALID_PARAM   - Ошибка. Недопустимые входные параметры
 *  ERROR           - Ошибка. Недостаточный размер результирующей строки
 * Примечание
 *  Автоматически формирует конец строки
 */
extern LOADER_FUNC error_t i32toa(
    int32_t value, char_t str[], uint_t str_len, int32_t base,
    uint_t *ptr_len );

/* Подпрограмма преобразования беззнакового целого 32-х битового числа
 * в строку
 *  (in)  value     - преобразуемое число
 *  (in)  str       - указатель результирующую строку
 *  (in)  str_len   - максимальный размер строки (символов),
 *                    включая символ конца строки
 *  (in)  base      - основание системы счисления
 *  (out) ptr_len   - указатель на число символов в результирующей строке
 *                    NULL - не возвращать число символов
 * Результат:
 *  NO_ERROR        - Успешное выполнение
 *  INVALID_PARAM   - Ошибка. Недопустимые входные параметры
 *  ERROR           - Ошибка. Недостаточный размер результирующей строки
 * Примечание
 *  Автоматически формирует конец строки
 */
extern LOADER_FUNC error_t u32toa(
    uint32_t value, char_t str[], uint_t str_len, uint_t base,
    uint_t *ptr_len );

#ifdef __cplusplus
}
#endif

#endif /* __ITOA_H__ */

